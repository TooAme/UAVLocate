package com.chenhy.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StaticsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStaticsAllPropertiesEquals(Statics expected, Statics actual) {
        assertStaticsAutoGeneratedPropertiesEquals(expected, actual);
        assertStaticsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStaticsAllUpdatablePropertiesEquals(Statics expected, Statics actual) {
        assertStaticsUpdatableFieldsEquals(expected, actual);
        assertStaticsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStaticsAutoGeneratedPropertiesEquals(Statics expected, Statics actual) {
        assertThat(actual)
            .as("Verify Statics auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStaticsUpdatableFieldsEquals(Statics expected, Statics actual) {
        assertThat(actual)
            .as("Verify Statics relevant properties")
            .satisfies(a -> assertThat(a.getTime()).as("check time").isEqualTo(expected.getTime()))
            .satisfies(a -> assertThat(a.getPosX()).as("check posX").isEqualTo(expected.getPosX()))
            .satisfies(a -> assertThat(a.getPosY()).as("check posY").isEqualTo(expected.getPosY()))
            .satisfies(a -> assertThat(a.getPosZ()).as("check posZ").isEqualTo(expected.getPosZ()))
            .satisfies(a -> assertThat(a.getWindSpeed()).as("check windSpeed").isEqualTo(expected.getWindSpeed()))
            .satisfies(a -> assertThat(a.getWindDirection()).as("check windDirection").isEqualTo(expected.getWindDirection()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStaticsUpdatableRelationshipsEquals(Statics expected, Statics actual) {
        // empty method
    }
}
